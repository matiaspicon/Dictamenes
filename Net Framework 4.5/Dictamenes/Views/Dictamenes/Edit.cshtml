@model Dictamenes.Models.Dictamen

@{
    ViewBag.Title = "Edit";
}

<h2>Editar Dictamen</h2>


<div class="form-horizontal">
    <hr />
    @using (Html.BeginForm("Edit", "Dictamenes", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Guid)

        @Html.AntiForgeryToken()

        <div class="form-group row">
            @Html.LabelFor(model => model.NroGDE, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NroGDE, new { htmlAttributes = new { @class = "form-control col-auto" } })
                @Html.ValidationMessageFor(model => model.NroGDE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.NroExpediente, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NroExpediente, new { htmlAttributes = new { @class = "form-control col-auto" } })
                @Html.ValidationMessageFor(model => model.NroExpediente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.FechaCarga, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                <input name="FechaCarga" type="datetime-local" class="form-control col-auto" value="@((Model != null && Model.FechaCarga != null) ? Model.FechaCarga.ToString("yyyy-MM-ddTHH:mm:ss") : DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"))" />
                @Html.ValidationMessageFor(model => model.FechaCarga, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Detalle, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Detalle, new { htmlAttributes = new { @class = "form-control col-auto" } })
                @Html.ValidationMessageFor(model => model.Detalle, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.IdArchivoPDF)
        <div class="form-group row">
            <p class="col-md-3">Ingrese el Archivo PDF</p>
            <input type="file" class="col-md-9" accept=".pdf" name="file" />
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.IdAsunto, "IdAsunto", htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                @Html.DropDownList("IdAsunto", null, htmlAttributes: new { @class = "form-control col-auto" })
                @Html.ValidationMessageFor(model => model.IdAsunto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.IdTipoDictamen, "IdTipoDictamen", htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                @Html.DropDownList("IdTipoDictamen", null, htmlAttributes: new { @class = "form-control col-auto" })
                @Html.ValidationMessageFor(model => model.IdTipoDictamen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-9">
                <div class="checkbox">
                    @Html.CheckBox("EsPublico", true) @Html.LabelFor(model => model.EsPublico, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
                </div>
            </div>
        </div>

        <div class="form-group form-check row">
            <label class="form-check-label control-label col-md-6 align-self-end">
                <input type="checkbox" class="form-check-input" id="esDenunciante" onclick="setForm(this.checked)" @(Model.SujetoObligado.Nombre != null ? "checked" : " ") /> Sujeto Obligado es Denunciante
            </label>
        </div>

        <div id="FormEmpresas" style="display:block">
            <div class="form-group row">
                @Html.LabelFor(model => model.IdSujetoObligado, "Sujetos Obligados", htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
                <div class="col-md-9">
                    @Html.DropDownList("IdSujetoObligado", null, htmlAttributes: new { @class = "form-control col-auto", id = "InputEmpresas" })
                    @Html.ValidationMessageFor(model => model.IdSujetoObligado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="FormPersonas" style="display:none">

            @if (Model.SujetoObligado.Nombre != null)
            {
                @Html.HiddenFor(model => model.IdSujetoObligado)
                <div class="form-group row">
                    <label class="form-label col-md-3 align-self-end">CUIL/CUIT </label>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.SujetoObligado.CuilCuit, new { htmlAttributes = new { @class = "form-control col-auto", id = "InputCuilCui", placeholder = "Ingrese el CUIL/CUIT del Sujeto Obligado" } })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="form-label col-md-3 align-self-end">Nombre</label>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.SujetoObligado.Nombre, new { htmlAttributes = new { @class = "form-control col-auto", placeholder = "Ingrese el Nombre del Sujeto Obligado" } })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="form-label col-md-3 align-self-end">Apellido</label>
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.SujetoObligado.Apellido, new { htmlAttributes = new { @class = "form-control col-auto", placeholder = "Ingrese el Apellido del Sujeto Obligado" } })
                    </div>
                </div>

            }
            else
            {

                <div class="form-group row">
                    <label class="form-label col-md-3 align-self-end">CUIL/CUIT </label>
                    <div class="col-md-9">
                        <input id="InputCuilCuit" name="CuilCuit" type="number" class="form-control col-auto" value="-1" placeholder="Ingrese el CUIL/CUIT del Sujeto Obligado">
                    </div>
                </div>
                <div class="form-group row">
                    <label class="form-label col-md-3 align-self-end">Nombre</label>
                    <div class="col-md-9">
                        <input name="Nombre" type="text" class="form-control col-auto" placeholder="Ingrese el Nombre del Sujeto Obligado">
                    </div>
                </div>
                <div class="form-group row">
                    <label class="form-label col-md-3 align-self-end">Apellido</label>
                    <div class="col-md-9">
                        <input name="Apellido" type="text" class="form-control col-auto" placeholder="Ingrese el Apellido del Sujeto Obligado">
                    </div>
                </div>
            }


        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-9">
                <a class="col-3 btn btn-secondary" onclick="history.go(-1);">Volver atras</a>
                <input type="submit" value="Guardar" class="btn btn-primary m-1" />
            </div>
        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
            function setForm(value) {
                console.log(value);
                if (value) {
                    document.getElementById('FormPersonas').style = 'display:block;';
                    document.getElementById('FormEmpresas').style = 'display:none;';
                    document.getElementById('InputEmpresas').value = "-1";
                }
                else {
                    document.getElementById('FormEmpresas').style = 'display:block;';
                    document.getElementById('FormPersonas').style = 'display:none;';
                    document.getElementById('InputCuilCuit').value = 0;
                }
            }
        </script>
        <script>setForm(document.getElementById("esDenunciante").checked)</script>
    }
