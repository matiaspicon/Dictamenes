@model Dictamenes.Models.Dictamen

@{
    ViewBag.Title = "Editar";
}

<h2>Editar Dictamen</h2>


<div class="form-horizontal">
    <hr />
    @using (Html.BeginForm("Edit", "Dictamenes", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @Html.AntiForgeryToken()

        <div class="form-group row">
            @Html.LabelFor(model => model.NroGDE, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NroGDE, new { htmlAttributes = new { @class = "form-control col-auto" } })
                @Html.ValidationMessageFor(model => model.NroGDE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.NroExpediente, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NroExpediente, new { htmlAttributes = new { @class = "form-control col-auto" } })
                @Html.ValidationMessageFor(model => model.NroExpediente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.FechaCarga, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                <input name="FechaCarga" type="datetime-local" class="form-control col-auto" value="@((Model != null && Model.FechaCarga != null) ? Model.FechaCarga.ToString("yyyy-MM-ddTHH:mm:ss") : DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss"))" />
                @Html.ValidationMessageFor(model => model.FechaCarga, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Detalle, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Detalle, new { htmlAttributes = new { @class = "form-control col-auto" } })
                @Html.ValidationMessageFor(model => model.Detalle, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.IdArchivoPDF, new { id = "IdArchivo" })
        <div class="form-group row">
            <p class="col-md-3">Ingrese el Archivo PDF</p>
            <input type="file" class="col-md-9" accept=".pdf" name="file" />
        </div>

        <div class="form-group row">
            <div class="col-md-9">
                <div class="checkbox">
                    @Html.CheckBox("BorrarArchivo", false)  @Html.Label("BorrarArchivo", "Borrar Archivo", htmlAttributes: new { @class = "control-label col-md-9 align-self-end" })
                </div>
            </div>
        </div>


        <div class="form-group row">
            @Html.LabelFor(model => model.IdAsunto, "Asunto", htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                @Html.DropDownList("IdAsunto", null, "Elija uno", htmlAttributes: new { @class = "form-control col-auto" })
                @Html.ValidationMessageFor(model => model.IdAsunto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.IdTipoDictamen, "Tipo de Dictamen", htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            <div class="col-md-9">
                @Html.DropDownList("IdTipoDictamen", null, "Sin Tipo de Dictamen", htmlAttributes: new { @class = "form-control col-auto" })
                @Html.ValidationMessageFor(model => model.IdTipoDictamen, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group row">
            <div class="col-md-9">
                <div class="checkbox">
                    @Html.CheckBox("EsPublico", true) @Html.LabelFor(model => model.EsPublico, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
                </div>
            </div>
        </div>*@

        <div class="form-group row">
            <div class="col-md-9">
                <div class="checkbox">
                    @Html.CheckBox("EsDenunciante", (Model.SujetoObligado != null && Model.SujetoObligado.Nombre != null), new { id = "esDenunciante", name = "EsDenunciante", onclick = "setForm(this.checked)" }) @Html.Label("esDenunciante","Sujeto Obligado es Denunciante", htmlAttributes: new { @class = "control-label col-md-9 align-self-end" }  )
                </div>
            </div>
        </div>


        <div id="FormEmpresas" style="display:block">
            <div class="form-group row">
                @Html.LabelFor(model => model.IdSujetoObligado, "Sujetos Obligados", htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
                <div class="col-md-9">
                    @Html.DropDownList("IdSujetoObligado", null, "Sin Sujeto Obligado", htmlAttributes: new { @class = "form-control col-auto", id = "InputEmpresas" })
                    @Html.ValidationMessageFor(model => model.IdSujetoObligado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="FormPersonas" style="display:none">
            @Html.HiddenFor(model => model.IdSujetoObligado)
            @if (Model.SujetoObligado != null) { Html.HiddenFor(model => model.SujetoObligado.Id); }
            <div class="form-group row">
                <label class="form-label col-md-3 align-self-end">Cuil/Cuit </label>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.SujetoObligado.CuilCuit, new { htmlAttributes = new { @class = "form-control col-auto", id = "InputCuilCuit", placeholder = "Ingrese el Cuil/Cuit del Sujeto Obligado" } })
                    @Html.ValidationMessageFor(model => model.SujetoObligado.CuilCuit, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="form-label col-md-3 align-self-end">Nombre</label>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.SujetoObligado.Nombre, new { htmlAttributes = new { @class = "form-control col-auto", placeholder = "Ingrese el Nombre del Sujeto Obligado" } })
                </div>
            </div>
            <div class="form-group row">
                <label class="form-label col-md-3 align-self-end">Apellido</label>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.SujetoObligado.Apellido, new { htmlAttributes = new { @class = "form-control col-auto", placeholder = "Ingrese el Apellido del Sujeto Obligado" } })
                </div>
            </div>
        </div>

        <div class="row justify-content-end">
            <div class="col-lg-6 col-md-8 row justify-content-end">
                <a class="col-4 btn btn-secondary m-1" onclick="history.go(-1);"><i class="bi bi-arrow-left"></i>  Volver atrás</a>
                <button type="submit" class="btn btn-success col-4 m-1"><i class="bi bi-check2-square"></i>  Guardar </button>
            </div>
        </div>
    }
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        function setForm(value) {
            console.log(value);
            if (value) {
                document.getElementById('FormPersonas').style = 'display:block;';
                document.getElementById('FormEmpresas').style = 'display:none;';
                document.getElementById('InputEmpresas').value = "-1";
            }
            else {
                document.getElementById('FormEmpresas').style = 'display:block;';
                document.getElementById('FormPersonas').style = 'display:none;';
                document.getElementById('InputCuilCuit').value = 0;
            }
        }
    </script>
    <script>setForm(document.getElementById("esDenunciante").checked)</script>
}
