@model Dictamenes.Models.TipoDictamen

@{
    ViewBag.Title = "Crear";
}

<h2>Crear Tipo de Dictamen</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group row">
        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
        <div class="col-md-9">
            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control col" } })
            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-9">
            <div class="checkbox">
                @Html.CheckBox("EstaHabilitado", true) @Html.LabelFor(model => model.EstaHabilitado, htmlAttributes: new { @class = "control-label col-md-3 align-self-end" })
            </div>
        </div>
    </div>
    <div class="row justify-content-end">
        <div class="col-lg-6 col-md-8 row justify-content-end">
            <a class="col-3 btn btn-secondary m-1" onclick="history.go(-1);"><i class="bi bi-arrow-left"></i>  Volver atrás</a>
            <button type="submit" class="btn btn-primary m-1 col-3"><i class="bi bi-plus-lg"></i>      Crear</button>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
